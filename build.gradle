plugins {
    id 'java'
    id 'com.enonic.xp.app' version '3.2.0'
    id "com.github.node-gradle.node" version "3.5.1"
}

sourceCompatibility = "1.11"
targetCompatibility = "1.11"

app {
    name = project.ext.appName
    displayName = project.ext.displayName
    vendorName = project.ext.vendorName
    vendorUrl = project.ext.vendorUrl
    systemVersion = "${xpVersion}"
    keepArchiveFileName = true

    rawDevSourcePaths = ["/enonic-xp/devpath", "/enonic-xp/devpathbuild"]
}

sourceSets {
    main {
        resources {
            srcDir "site"
        }
    }
}

dependencies {
    implementation "com.enonic.xp:core-api:${xpVersion}"
    implementation "com.enonic.xp:portal-api:${xpVersion}"
    include "com.enonic.xp:lib-admin:${xpVersion}"
    include "com.enonic.xp:lib-content:${xpVersion}"
    include "com.enonic.xp:lib-context:${xpVersion}"
    include "com.enonic.xp:lib-i18n:${xpVersion}"
    include "com.enonic.xp:lib-io:${xpVersion}"
    include "com.enonic.xp:lib-portal:${xpVersion}"
    include "com.enonic.lib:lib-cache:2.1.0"
    include "com.enonic.lib:lib-admin-ui:4.0.2"
    include "com.github.tineikt:xp-lib-freemarker:1.1.6"
}

repositories {
    mavenLocal()
    mavenCentral()
    xp.enonicRepo()
    maven { url "https://jitpack.io" } // Needed by freemarker
    // needed by "no.bouvet.xp.lib:util-ex" in dependencies
}

node {
    // Version of node to use.
    version = "16.14.2"

    // Version of npm to use.
    npmVersion = "8.5.0"

    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = true
}

wrapper {
    gradleVersion = "7.3.1"
    distributionType = Wrapper.DistributionType.BIN
}
